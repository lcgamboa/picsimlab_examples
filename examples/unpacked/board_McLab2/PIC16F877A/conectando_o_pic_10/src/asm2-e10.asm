; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                   CONECTANDO O PIC - RECURSOS AVAN�ADOS                 *
; *                               EXEMPLO 10                                *
; *                                                                         *
; *                NICOL�S C�SAR LAVINIA e DAVID JOS� DE SOUZA              *
; *                                                                         *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *   VERS�O : 3.0                                                          *
; *     DATA : 24/02/2003                                                   *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                             DESCRI��O GERAL                             *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ESTE EXEMPLO FOI ELABORADO PARA EXPLICAR O FUNCIONAMENTO DO TMR1 COMO
;  CONTADOR, UTILIZADO NA PLACA MCLAB2 PARA CONTAR AS ROTA��ES DO VENTILADOR.
;  O SOFTWARE CONVERTE O CANAL 0 DO CONVERSOR A/D (SENSOR DE TEMPERATURA).
;  DOIS PWMs FORAM UTILIZADOS, UM PARA MODULAR A RESIST�NCIA DE AQUECIMENTO
;  E OUTRO PARA A VELOCIDADE DO VENTILADOR.
;  COM AS TECLAS S1 E S2 PODE-SE VARIAR O PWM DO AQUECEDOR E COM AS TECLAS
;  S3 E S4 O PWM DO VENTILADOR.
;  NO LCD S�O MOSTRADOS OS VALORES DO PWM DO AQUECEDOR, O N�MERO DE ROTA��ES
;  POR SEGUNDO DO VENTILADOR E A TEMPERATURA DO DIODO J� CONVERTIDA EM GRAUS
;  CELSIUS. AL�M DISSO, O VALOR ATUAL DA TEMPERATURA DO DIODO � TRANSMITIDO
;  PERIODICAMENTE ATRAV�S DA USART.
;
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                         CONFIGURA��ES PARA GRAVA��O                     *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

 __CONFIG _CP_OFF & _CPD_OFF & _DEBUG_OFF & _LVP_OFF & _WRT_OFF & _BODEN_OFF & _PWRTE_ON & _WDT_ON & _XT_OSC

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                            DEFINI��O DAS VARI�VEIS                      *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ESTE BLOCO DE VARI�VEIS EST� LOCALIZADO LOGO NO IN�CIO DO BANCO 0

	CBLOCK	0X20			; POSI��O INICIAL DA RAM

		TEMPO0
		TEMPO1			; TMEPORIZADORES P/ ROTINA DE DELAY

		AUX			; REGISTRADOR AUXILIAR DE USO GERAL

		UNIDADE			; ARMAZENA VALOR DA UNIDADE
		DEZENA			; ARMAZENA VALOR DA DEZENA
		CENTENA			; ARMAZENA VALOR DA CENTENA

		INTENSIDADE_VENT	; INTENSIDADE DO VENTILADOR
		INTENSIDADE_AQUE	; INTENSIDADE DO AQUECEDOR

		ACCaHI			; ACUMULADOR a DE 16 BITS UTILIZADO
		ACCaLO			; NA ROTINA DE DIVIS�O

		ACCbHI			; ACUMULADOR b DE 16 BITS UTILIZADO
		ACCbLO			; NA ROTINA DE DIVIS�O

		ACCcHI			; ACUMULADOR c DE 16 BITS UTILIZADO
		ACCcLO			; NA ROTINA DE DIVIS�O

		ACCdHI			; ACUMULADOR d DE 16 BITS UTILIZADO
		ACCdLO			; NA ROTINA DE DIVIS�O

		temp			; CONTADOR TEMPOR�RIO UTILIZADO
					; NA ROTINA DE DIVIS�O

		H_byte			; ACUMULADOR DE 16 BITS UTILIZADO
		L_byte			; P/ RETORNAR O VALOR DA ROTINA
					; DE MULTIPLICA��O

		mulplr			; OPERADOR P/ ROTINA DE MUTIPLICA��O
		mulcnd			; OPERADOR P/ ROTINA DE MUTIPLICA��O

		TEMPERATURA		; TEMPERATURA DO DIODO EM UNIDADES DE A/D
		TEMP_CELSIUS		; TEMPERATURA DO DIODO J� CONVERTIDO
					; PARA GRAUS CELSIUS

		FILTRO_BOTOES		; FILTRO P/ DEBOUNCE DOS BOTO�ES
		TEMPO_TURBO		; TEMPORIZADOR P/ TUBO DO TECLADO

		TEMPO_1S		; TEMPORIZADOR DE 1 SEGUNDO

		CONT_VENT_HIGH
		CONT_VENT_LOW		; CONTADORES PARA ROTA��O DO VENTILADOR

		FLAG			; FLAG DE USO GERAL

		WORK_TEMP
		STATUS_TEMP
		PCLATH_TEMP
		FSR_TEMP		; REGISTRADORES UTILIZADOS P/ SALVAR
					; O CONTEXTO DURANTE AS INTERRUP��ES
	ENDC

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                DEFINI��O DAS VARI�VEIS INTERNAS DO PIC                  *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  O ARQUIVO DE DEFINI��ES DO PIC UTILIZADO DEVE SER REFERENCIADO PARA QUE
;  OS NOMES DEFINIDOS PELA MICROCHIP POSSAM SER UTILIZADOS, SEM A NECESSIDADE
;  DE REDIGITA��O.

	#INCLUDE <P16F877A.INC>		; MICROCONTROLADOR UTILIZADO

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                      DEFINI��O DOS BANCOS DE RAM                        *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  OS PSEUDOS-COMANDOS "BANK0" E "BANK1", AQUI DEFINIDOS, AJUDAM A COMUTAR
;  ENTRE OS BANCOS DE MEM�RIA.

#DEFINE	BANK1	BSF	STATUS,RP0 	; SELECIONA BANK1 DA MEMORIA RAM
#DEFINE	BANK0	BCF	STATUS,RP0	; SELECIONA BANK0 DA MEMORIA RAM

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                           CONSTANTES INTERNAS                           *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  A DEFINI��O DE CONSTANTES FACILITA A PROGRAMA��O E A MANUTEN��O.

FILTRO_TECLA	EQU	.200		; FILTRO P/ EVITAR RUIDOS DOS BOT�ES

TURBO_TECLA	EQU	.70		; TEMPERIZADOR P/ TURBO DO TECLADO

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                    DECLARA��O DOS FLAGs DE SOFTWARE                     *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  A DEFINI��O DE FLAGs AJUDA NA PROGRAMA��O E ECONOMIZA MEM�RIA RAM.

#DEFINE	MOSTRA_RPS	FLAG,0		; FLAG PARA MOSTRAR A ROTA��O NO LCD
					; 1 -> DEVE MOSTRAR A ROTA��O
					; 0 -> NAO DEVE MOSTRAR A ROTA��O

#DEFINE	MOSTRA_TEMP	FLAG,1		; FLAG PARA MOSTRAR A TEMPERATURA NO LCD
					; 1 -> DEVE MOSTRAR A TEMPERATURA
					; 0 -> NAO DEVE MOSTRAR A TEMPERATURA

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                                ENTRADAS                                 *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  AS ENTRADAS DEVEM SER ASSOCIADAS A NOMES PARA FACILITAR A PROGRAMA��O E
;  FUTURAS ALTERA��ES DO HARDWARE.

#DEFINE	BOTAO_0		PORTB,0		; ESTADO DO BOT�O 0
					; 1 -> LIBERADO
					; 0 -> PRESSIONADO

#DEFINE	BOTAO_1		PORTB,1		; ESTADO DO BOT�O 1
					; 1 -> LIBERADO
					; 0 -> PRESSIONADO

#DEFINE	BOTAO_2		PORTB,2		; ESTADO DO BOT�O 2
					; 1 -> LIBERADO
					; 0 -> PRESSIONADO

#DEFINE	BOTAO_3		PORTB,3		; ESTADO DO BOT�O 3
					; 1 -> LIBERADO
					; 0 -> PRESSIONADO

;  ESTE PROGRAMA UTILIZA UMA ENTRADA P/ O CONVERSOR A/D.
;  ESTA ENTRADA N�O PRECISA SER DECLARADA, POIS O SOFTWARE NUNCA FAZ
;  REFER�NCIA A ELA DE FORMA DIRETA, POIS O CANAL A/D A SER CONVERTIDO �
;  SELECIONADO NO REGISTRADOS ADCON0 DE FORMA BIN�RIA E N�O ATRAV�S DE
;  DEFINES. POR�M PARA FACILITAR O ENTENDIMENTO DO HARDWARE VAMOS DECLARAR
;  ESTA ENTRADA NORMALMENTE.

#DEFINE	CAD_TEMP	PORTA,0		; ENTRADA A/D PARA TEMPERATURA

;  AL�M DA ENTRADA DO CONVERSOR A/D, TEMOS A ENTRADA DA USART (RECEP��O).
;  NOVAMENTE ESTA ENTRADA N�O NECESSITA SER DECLARADA, POR�M, PARA 
;  FACILITAR O ENTENDIMENTO DO HARDWARE VAMOS DECLARAR ESTA ENTRADA
;  NORMALMENTE.

#DEFINE	RXUSART	PORTC,7			; ENTRADA DE RX DA USART

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                                 SA�DAS                                  *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  AS SA�DAS DEVEM SER ASSOCIADAS A NOMES PARA FACILITAR A PROGRAMA��O E
;  FUTURAS ALTERA��ES DO HARDWARE.

#DEFINE	DISPLAY		PORTD		; BARRAMENTO DE DADOS DO DISPLAY

#DEFINE	RS		PORTE,0		; INDICA P/ O DISPLAY UM DADO OU COMANDO
					; 1 -> DADO
					; 0 -> COMANDO

#DEFINE	ENABLE		PORTE,1		; SINAL DE ENABLE P/ DISPLAY
					; ATIVO NA BORDA DE DESCIDA

;  TEMOS TAMB�M AS SA�DAS DE TX DA USART, PWM1 E PWM2.
;  PARA FACILITAR O ENTENDIMENTO DO HARDWARE VAMOS DECLARAR ESTAS SA�DAS
;  NORMALMENTE APESAR DE N�O SEREM UTILIZADAS.

#DEFINE	TXUSART		PORTC,6		; SA�DA DE TX DA USART

#DEFINE	VENTILADOR	PORTC,1		; SA�DA P/ VENTILADOR

#DEFINE	AQUECEDOR	PORTC,2		; SA�DA P/ AQUECEDOR

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                   VETOR DE RESET DO MICROCONTROLADOR                    *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  POSI��O INICIAL PARA EXECU��O DO PROGRAMA

	ORG	0X0000			; ENDERE�O DO VETOR DE RESET
	NOP
	GOTO	CONFIG_			; PULA PARA CONFIG DEVIDO A REGI�O
					; DESTINADA AS ROTINAS SEGUINTES

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                           VETOR DE INTERRUP��O                          *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  POSI��O DE DESVIO DO PROGRAMA QUANDO UMA INTERRUP��O ACONTECE

	ORG	0X0004			; ENDERE�O DO VETOR DE INTERRUP��O

;  � MUITO IMPORTANTE QUE OS REGISTRADORES PRIORIT�RIOS AO FUNCIONAMENTO DA
;  M�QUINA, E QUE PODEM SER ALTERADOS TANTO DENTRO QUANTO FORA DAS INTS SEJAM
;  SALVOS EM REGISTRADORES TEMPOR�RIOS PARA PODEREM SER POSTERIORMENTE
;  RECUPERADOS.

SALVA_CONTEXTO
	MOVWF	WORK_TEMP		; SALVA REGISTRADOR DE TRABALHO E 
	SWAPF	STATUS,W		; DE STATUS DURANTE O TRATAMENTO 
	MOVWF	STATUS_TEMP		; DA INTERRUP��O.
	MOVF	FSR,W
	MOVWF	FSR_TEMP		; SALVA REGISTRADOR FSR
	MOVF	PCLATH,W
	MOVWF	PCLATH_TEMP		; SALVA REGISTRADOR PCLATH

	CLRF	PCLATH			; LIMPA REGISTRADOR PCLATH
					; (SELECIONA P�GINA 0)
	CLRF	STATUS			; LIMPA REGISTRADOR STATUS
					; (SELECIONA BANCO 0)

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                TRATAMENTO DA INTERRUP��O DE TIMER 2                     *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; A INTERRUP��O DE TMR2 � UTILIZADA PARA FORNECER A BASE DE TEMPO PARA AS
; MEDIDAS DAS ROTA��ES POR SEGUNDO DO VENTILADOR E DA TEMPERATURA DO DIODO.
; AL�M DISSO, ELA SETA OS FLAGS PARA QUE ESTES SEJAM ATUALIZADOS NO LCD.
; O TMR2 EST� CONFIGURADO PARA POSTSCALE DE 1:10 E PORTANTO A CADA 10ms A
; INTERRUP��O � GERADA.
; O CONVERSOR A/D � LIDO A CADA INTERRUP��O, OU SEJA, A CADA 10ms.
; A CADA 100 INTERRUP��ES, OU SEJA, A CADA 1 SEGUNDO, O VALOR DO CONTADOR DO
; TMR1 � SALVO NA VARI�VEL CONT_VENT (HIGH E LOW), DESTA FORMA, O VALOR DE
; CONT_VENT � O N�MERO DE ROTA��ES DO VENTILADOR POR SEGUNDO. NA VERDADE ESTE
; VALOR ENCONTRA-SE MULTIPLICADO PELO N�MERO DE PALHETAS DO VENTILADOR.

INT_TMR2
	BCF	PIR1,TMR2IF		; LIMPA FLAG DA INTERRUP��O

	DECFSZ	TEMPO_1S,F		; FIM DO 1 SEGUNDO ?
	GOTO	INT_TMR2_2		; N�O - PULA P/ INT_TMR2_2
					; SIM
	MOVLW	.100
	MOVWF	TEMPO_1S		; RECARREGA TEMPORIZADOR DE 1 SEGUNDO

	BCF	T1CON,TMR1ON		; PARALIZA CONTADOR DO TMR1

	MOVF	TMR1H,W
	MOVWF	CONT_VENT_HIGH
	MOVF	TMR1L,W
	MOVWF	CONT_VENT_LOW		; SALVA VALOR DO TMR1 EM CONT_VENT

	CLRF	TMR1H
	CLRF	TMR1L			; RESETA CONTADORES

	BSF	T1CON,TMR1ON		; LIBERA CONTADORES DO TMR1

	BSF	MOSTRA_RPS		; SETA FLAG P/ MOSTRAR VALOR
					; DAS RPS DO VENTILADOR

INT_TMR2_2
	MOVF	ADRESH,W
	MOVWF	TEMPERATURA		; SALVA VALOR DA CONVERS�O A/D
					; NA VARI�VEL TEMPERATURA
	BSF	ADCON0,GO		; INICIA UMA NOVA CONVERS�O

	BSF	MOSTRA_TEMP		; SETA FLAG P/ ATUALIZAR VALOR
					; DA TEMPERATURA NO LCD

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                           SA�DA DA INTERRUP��O                          *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ANTES DE SAIR DA INTERRUP��O, O CONTEXTO SALVO NO IN�CIO DEVE SER
;  RECUPERADO PARA QUE O PROGRAMA N�O SOFRA ALTERA��ES INDESEJADAS.

SAI_INT
	MOVF	PCLATH_TEMP,W
	MOVWF	PCLATH			; RECUPERA REG. PCLATH (PAGINA��O)
	MOVF	FSR_TEMP,W
	MOVWF	FSR			; RECUPERA REG. FSR (END. INDIRETO)
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS			; RECUPERA REG. STATUS
	SWAPF	WORK_TEMP,F
	SWAPF	WORK_TEMP,W		; RECUPERA REG. WORK
	RETFIE				; RETORNA DA INTERRUP��O (HABILITA GIE)

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                           ROTINA DE DIVIS�O                             *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;****************************************************************************
;                       Double Precision Division
;****************************************************************************
;   Division : ACCb(16 bits) / ACCa(16 bits) -> ACCb(16 bits) with
;                                               Remainder in ACCc (16 bits)
;      (a) Load the Denominator in location ACCaHI & ACCaLO ( 16 bits )
;      (b) Load the Numerator in location ACCbHI & ACCbLO ( 16 bits )
;      (c) CALL D_divF
;      (d) The 16 bit result is in location ACCbHI & ACCbLO
;      (e) The 16 bit Remainder is in locations ACCcHI & ACCcLO
;****************************************************************************

D_divF
	MOVLW	.16
	MOVWF	temp			; CARREGA CONTADOR PARA DIVIS�O

	MOVF	ACCbHI,W
	MOVWF	ACCdHI
	MOVF	ACCbLO,W
	MOVWF	ACCdLO			; SALVA ACCb EM ACCd

	CLRF	ACCbHI
	CLRF	ACCbLO			; LIMPA ACCb

	CLRF	ACCcHI
	CLRF	ACCcLO			; LIMPA ACCc

DIV
	BCF	STATUS,C
	RLF	ACCdLO,F
	RLF	ACCdHI,F
	RLF	ACCcLO,F
	RLF	ACCcHI,F
	MOVF	ACCaHI,W
	SUBWF	ACCcHI,W          	;check if a>c
	BTFSS	STATUS,Z
	GOTO	NOCHK
	MOVF	ACCaLO,W
	SUBWF	ACCcLO,W		;if msb equal then check lsb
NOCHK
	BTFSS	STATUS,C		;carry set if c>a
	GOTO	NOGO
	MOVF	ACCaLO,W		;c-a into c
	SUBWF	ACCcLO,F
	BTFSS	STATUS,C
	DECF	ACCcHI,F
	MOVF	ACCaHI,W
	SUBWF	ACCcHI,F
	BSF	STATUS,C		;shift a 1 into b (result)
NOGO
	RLF	ACCbLO,F
	RLF	ACCbHI,F

	DECFSZ	temp,F			; FIM DA DIVIS�O ?
	GOTO	DIV			; N�O - VOLTA P/ DIV
					; SIM
	RETURN				; RETORNA


; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                           ROTINA DE MULTIPLICA��O                       *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;****************************************************************************
;                   8x8 Software Multiplier
;               ( Fast Version : Straight Line Code )
;****************************************************************************
;
;   The 16 bit result is stored in 2 bytes
; Before calling the subroutine " mpy ", the multiplier should
; be loaded in location " mulplr ", and the multiplicand in
; " mulcnd " . The 16 bit result is stored in locations
; H_byte & L_byte.
;       Performance :
;                       Program Memory  :  37 locations
;                       # of cycles     :  38
;                       Scratch RAM     :   0 locations
;*******************************************************************

; ********************************************
;  Define a macro for adding & right shifting
; ********************************************

mult    MACRO   bit			; Begin macro

	BTFSC	mulplr,bit
	ADDWF	H_byte,F
	RRF	H_byte,F
	RRF	L_byte,F

	ENDM				; End of macro

; *****************************
;   Begin Multiplier Routine
; *****************************

mpy_F
	CLRF	H_byte
	CLRF	L_byte
	MOVF	mulcnd,W		; move the multiplicand to W reg.
	BCF	STATUS,C		; Clear carry bit in the status Reg.

	mult    0
	mult    1
	mult    2
	mult    3
	mult    4
	mult    5
	mult    6
	mult    7

	RETURN				; RETORNA

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                   ROTINA DE DELAY (DE 1MS AT� 256MS)                    *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ESTA � UMA ROTINA DE DELAY VARI�VEL, COM DURA��O DE 1MS X O VALOR PASSADO
;  EM WORK (W).

DELAY_MS
	MOVWF	TEMPO1			; CARREGA TEMPO1 (UNIDADES DE MS)
	MOVLW	.250
	MOVWF	TEMPO0			; CARREGA TEMPO0 (P/ CONTAR 1MS)

	CLRWDT				; LIMPA WDT (PERDE TEMPO)
	DECFSZ	TEMPO0,F		; FIM DE TEMPO0 ?
	GOTO	$-2			; N�O - VOLTA 2 INSTRU��ES
					; SIM - PASSOU-SE 1MS
	DECFSZ	TEMPO1,F		; FIM DE TEMPO1 ?
	GOTO	$-6			; N�O - VOLTA 6 INSTRU��ES
					; SIM
	RETURN				; RETORNA

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *               ROTINA DE ESCRITA DE UM CARACTER NO DISPLAY               *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ESTA ROTINA ENVIA UM CARACTER PARA O M�DULO DE LCD. O CARACTER A SER
;  ESCRITO DEVE SER COLOCADO EM WORK (W) ANTES DE CHAMAR A ROTINA.

ESCREVE
	MOVWF	DISPLAY			; ATUALIZA DISPLAY (PORTD)
	NOP				; PERDE 1US PARA ESTABILIZA��O
	BSF	ENABLE			; ENVIA UM PULSO DE ENABLE AO DISPLAY
	GOTO	$+1			; .
	BCF	ENABLE			; .

	MOVLW	.1
	CALL	DELAY_MS		; DELAY DE 1MS
	RETURN				; RETORNA

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                               AJUSTE DECIMAL                            *
; *           W [HEX] =  CENTENA [DEC] : DEZENA [DEC] ; UNIDADE [DEC]       *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ESTA ROTINA RECEBE UM ARGUMENTO PASSADO PELO WORK E RETORNA NAS VARI�VEIS
;  CENTENA, DEZENA E UNIDADE O N�MERO BCD CORRESPOND�NTE AO PAR�METRO PASSADO.

AJUSTE_DECIMAL
	MOVWF	AUX			; SALVA VALOR A CONVERTER EM AUX

	CLRF	UNIDADE
	CLRF	DEZENA
	CLRF	CENTENA			; RESETA REGISTRADORES

	MOVF	AUX,F
	BTFSC	STATUS,Z		; VALOR A CONVERTER = 0 ?
	RETURN				; SIM - RETORNA
					; N�O
	INCF	UNIDADE,F		; INCREMENTA UNIDADE

	MOVF	UNIDADE,W
	XORLW	0X0A
	BTFSS	STATUS,Z		; UNIDADE = 10d ?
	GOTO	$+3			; N�O
					; SIM
	CLRF	UNIDADE			; RESETA UNIDADE
	INCF	DEZENA,F		; INCREMENTA DEZENA

	MOVF	DEZENA,W
	XORLW	0X0A
	BTFSS	STATUS,Z		; DEZENA = 10d ?
	GOTO	$+3			; N�O
					; SIM
	CLRF	DEZENA			; RESETA DEZENA
	INCF	CENTENA,F		; INCREMENTA CENTENA

	DECFSZ	AUX,F			; FIM DA CONVERS�O ?
	GOTO	$-.14			; N�O - VOLTA P/ CONTINUAR CONVERS�O
	RETURN				; SIM

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *             ROTINA PARA MOSTRAR A ROTA��O DO VENTILADOR NO LCD          *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ESTA ROTINA ATUALIZA O VALOR DAS ROTA��ES POR SEGUNDO DO VENTILADOR NO LCD.

MOSTRA_RPS_LCD
	BCF	MOSTRA_RPS		; LIMPA FLAG DE ATUALIZA��O DA RPS

	BCF	RS			; SELECIONA O DISPLAY P/ COMANDOS
	MOVLW	0XC7			; COMANDO PARA POSICIONAR O CURSOR
	CALL	ESCREVE			; LINHA 1 / COLUNA 7
	BSF	RS			; SELECIONA O DISPLAY P/ DADOS

	MOVF	CONT_VENT_HIGH,W
	MOVWF	ACCbHI
	MOVF	CONT_VENT_LOW,W
	MOVWF	ACCbLO			; CARREGA ACCb COM VALOR DO CONTADOR

	CLRF	ACCaHI
	MOVLW	.7
	MOVWF	ACCaLO			; CARREGA ACCa COM N�MERO DE PALHETAS
					; DO VENTILADOR

	CALL	D_divF			; CHAMA ROTINA DE DIVIS�O

	MOVF	ACCbLO,W
	CALL	AJUSTE_DECIMAL		; FAZ O AJUSTE DECIMAL DO RESULTADO
					; (ROTA��ES POR SEGUNDO)
	MOVF	CENTENA,W
	ADDLW	0X30			; CONVERTE CENTENA EM ASCII
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	MOVF	DEZENA,W
	ADDLW	0X30			; CONVERTE DEZENA EM ASCII
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	MOVF	UNIDADE,W
	ADDLW	0X30			; CONVERTE UNIDADE EM ASCII
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	RETURN				; RETORNA

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                   ROTINA PARA MOSTRAR A TEMPERATURA NO LCD              *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ESTA ROTINA CONSULTA UMA TABELA P/ CONVERTER O VALOR DO CANAL A/D DO SENSOR
; DE TEMPERATURA EM GRAUS CELSIUS, MOSTRA ESTE NO LCD E TRANSMITE PELA USART.

MOSTRA_TEMP_LCD
	BCF	MOSTRA_TEMP		; LIMPA FLAG DE ATUALIZA��O DA TEMP.

	CALL	TABELA_TEMPERATURA	; CONVERTE A/D EM GRAUS CELSIUS
	MOVWF	TEMP_CELSIUS		; SALVA VALOR EM TEMP_CELSIUS
	CALL	AJUSTE_DECIMAL		; FAZ O AJUSTE DECIMAL

	BCF	RS			; SELECIONA O DISPLAY P/ COMANDOS
	MOVLW	0XCB			; COMANDO PARA POSICIONAR O CURSOR
	CALL	ESCREVE			; LINHA 1 / COLUNA 11
	BSF	RS			; SELECIONA O DISPLAY P/ DADOS

	MOVF	CENTENA,W
	ADDLW	0X30			; CONVERTE CENTENA EM ASCII
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	MOVF	DEZENA,W
	ADDLW	0X30			; CONVERTE DEZENA EM ASCII
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	MOVF	UNIDADE,W
	ADDLW	0X30			; CONVERTE UNIDADE EM ASCII
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	MOVF	TEMP_CELSIUS,W		; CARREGA EM WORK A TEMPERATURA
	BANK1				; ALTERA P/ BANCO 1 DA RAM
	BTFSS	TXSTA,TRMT		; O BUFFER DE TX EST� VAZIO ?
	GOTO	$-1			; N�O - AGUARDA ESVAZIAR
	BANK0				; SIM - VOLTA P/ BANCO 0 DA RAM
	MOVWF	TXREG			; CARREGA TXREG COM O VALOR DO WORK
					; TRANSMITE A TEMPERATURA EM GRAUS
					; CELSIUS PELA USART
	RETURN				; RETORNA

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                CONFIGURA��ES INICIAIS DE HARDWARE E SOFTWARE            *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  NESTA ROTINA S�O INICIALIZADAS AS PORTAS DE I/O DO MICROCONTROLADOR E AS
;  CONFIGURA��ES DOS REGISTRADORES ESPECIAIS (SFR). A ROTINA INICIALIZA A
;  M�QUINA E AGUARDA O ESTOURO DO WDT.

CONFIG_
	CLRF	PORTA			; GARANTE TODAS AS SA�DAS EM ZERO
	CLRF	PORTB
	CLRF	PORTC
	CLRF	PORTD
	CLRF	PORTE

	BANK1				; SELECIONA BANCO 1 DA RAM

	MOVLW	B'11111111'
	MOVWF	TRISA			; CONFIGURA I/O DO PORTA

	MOVLW	B'11111111'
	MOVWF	TRISB			; CONFIGURA I/O DO PORTB

	MOVLW	B'10111001'
	MOVWF	TRISC			; CONFIGURA I/O DO PORTC

	MOVLW	B'00000000'
	MOVWF	TRISD			; CONFIGURA I/O DO PORTD

	MOVLW	B'00000100'
	MOVWF	TRISE			; CONFIGURA I/O DO PORTE

	MOVLW	B'11011011'
	MOVWF	OPTION_REG		; CONFIGURA OPTIONS
					; PULL-UPs DESABILITADOS
					; INTER. NA BORDA DE SUBIDA DO RB0
					; TIMER0 INCREM. PELO CICLO DE M�QUINA
					; WDT   - 1:8
					; TIMER - 1:1
					
	MOVLW	B'01000000'
	MOVWF	INTCON			; CONFIGURA INTERRUP��ES
					; HABILITA INTER. DE PERIF�RICOS


	MOVLW	B'00000010'		; CONFIGURA INTER. DE PERIF�RICOS
	MOVWF	PIE1			; HABILITA A INTERRUP��O DE TMR2

	MOVLW	B'00000100'
	MOVWF	ADCON1			; CONFIGURA CONVERSOR A/D
					; RA0, RA1 E RA3 COMO ANAL�GICO
					; RA2, RA4 E RA5 COMO I/O DIGITAL
					; PORTE COMO I/O DIGITAL
					; JUSTIFICADO � ESQUERDA
					; 8 BITS EM ADRESH E 2 BITS EM ADRESL
					; Vref+ = VDD (+5V)
					; Vref- = GND ( 0V)

	MOVLW	B'00100100'
	MOVWF	TXSTA			; CONFIGURA USART
					; HABILITA TX
					; MODO ASSINCRONO
					; TRANSMISS�O DE 8 BITS
					; HIGH SPEED BAUD RATE
	MOVLW	.25
	MOVWF	SPBRG			; ACERTA BAUD RATE -> 9600bps

	MOVLW	.249
	MOVWF	PR2			; CONFIGURA PER�ODO DO PWM
					; T=((PR2)+1)*4*Tosc*TMR2 Prescale
					; T=((249)+1)*4*250ns*4
					; T=1,000ms -> 1.000Hz = 1KHz

	BANK0				; SELECIONA BANCO 0 DA RAM

	MOVLW	B'10010000'
	MOVWF	RCSTA			; CONFIGURA USART
					; HABILITA RX
					; RECEP��O DE 8 BITS
					; RECEP��O CONT�NUA
					; DESABILITA ADDRESS DETECT

	MOVLW	B'01000001'
	MOVWF	ADCON0			; CONFIGURA CONVERSOR A/D
					; VELOCIDADE -> Fosc/8
					; CANAL 0
					; M�DULO LIGADO

	CLRF	TMR1L
	CLRF	TMR1H			; ZERA CONTADOR DO TMR1

	MOVLW	B'00000111'
	MOVWF	T1CON			; CONFIGURA TMR1
					; PRESCALE DE 1:1
					; TMR1 INCREM. PELO PINO T1CKI (RC0)
					; N�O SINCRONIZADO COM CLOCK INTERNO
					; CONTADOR HABILITADO

	MOVLW	B'01001101'
	MOVWF	T2CON			; CONFIGURA TMR2
					; TMR2 HABILITADO
					; POSTSCALE 1:10
					; PRESCALE 1:4

	CLRF	CCPR2L			; ZERA PWM DO CCP2 (RC1 - VENTILADOR)

	MOVLW	B'00001111'
	MOVWF	CCP2CON			; CONFIGURA CCP2 P/ PWM

	CLRF	CCPR1L			; ZERA PWM DO CCP1 (RC2 - AQUECEDOR)

	MOVLW	B'00001111'
	MOVWF	CCP1CON			; CONFIGURA CCP1 P/ PWM

;  AS INSTRU��ES A SEGUIR FAZEM COM QUE O PROGRAMA TRAVE QUANDO HOUVER UM
;  RESET OU POWER-UP, MAS PASSE DIRETO SE O RESET FOR POR WDT. DESTA FORMA,
;  SEMPRE QUE O PIC � LIGADO, O PROGRAMA TRAVA, AGUARDA UM ESTOURO DE WDT
;  E COME�A NOVAMENTE. ISTO EVITA PROBLEMAS NO START-UP DO PIC.

	BTFSC	STATUS,NOT_TO		; RESET POR ESTOURO DE WATCHDOG TIMER ?
	GOTO	$			; N�O - AGUARDA ESTOURO DO WDT
					; SIM

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                         INICIALIZA��O DA RAM                            *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ESTA ROTINA IR� LIMPAR TODA A RAM DO BANCO 0, INDO DE 0X20 A 0X7F

	MOVLW	0X20
	MOVWF	FSR			; APONTA O ENDERE�AMENTO INDIRETO PARA
					; A PRIMEIRA POSI��O DA RAM
LIMPA_RAM
	CLRF	INDF			; LIMPA A POSI��O
	INCF	FSR,F			; INCREMENTA O PONTEIRO P/ A PR�X. POS.
	MOVF	FSR,W
	XORLW	0X80			; COMPARA O PONTEIRO COM A �LT. POS. +1
	BTFSS	STATUS,Z		; J� LIMPOU TODAS AS POSI��ES?
	GOTO	LIMPA_RAM		; N�O - LIMPA A PR�XIMA POSI��O
					; SIM

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                     CONFIGURA��ES INICIAIS DO DISPLAY                   *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ESTA ROTINA INICIALIZA O DISPLAY P/ COMUNICA��O DE 8 VIAS, DISPLAY PARA 2
; LINHAS, CURSOR APAGADO E DESLOCAMENTO DO CURSOR � DIREITA. 

INICIALIZACAO_DISPLAY
	BCF	RS			; SELECIONA O DISPLAY P/ COMANDOS

	MOVLW	0X30			; ESCREVE COMANDO 0X30 PARA
	CALL	ESCREVE			; INICIALIZA��O

	MOVLW	.3
	CALL	DELAY_MS		; DELAY DE 3MS (EXIGIDO PELO DISPLAY)

	MOVLW	0X30			; ESCREVE COMANDO 0X30 PARA
	CALL	ESCREVE			; INICIALIZA��O

	MOVLW	0X30			; ESCREVE COMANDO 0X30 PARA
	CALL	ESCREVE			; INICIALIZA��O

	MOVLW	B'00111000'		; ESCREVE COMANDO PARA
	CALL	ESCREVE			; INTERFACE DE 8 VIAS DE DADOS

	MOVLW	B'00000001'		; ESCREVE COMANDO PARA
	CALL	ESCREVE			; LIMPAR TODO O DISPLAY

	MOVLW	.1
	CALL	DELAY_MS		; DELAY DE 1MS

	MOVLW	B'00001100'		; ESCREVE COMANDO PARA
	CALL	ESCREVE			; LIGAR O DISPLAY SEM CURSOR

	MOVLW	B'00000110'		; ESCREVE COMANDO PARA INCREM.
	CALL	ESCREVE			; AUTOM�TICO � DIREITA

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                 ROTINA DE ESCRITA DA TELA PRINCIPAL                     *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  ESTA ROTINA ESCREVE A TELA PRINCIPAL DO PROGRAMA, COM AS FRASES:
;  LINHA 1 - "AQUEC. RPS TEMP."
;  LINHA 2 - " 000%  000 000�C"

	MOVLW	0X80			; COMANDO PARA POSICIONAR O CURSOR
	CALL	ESCREVE			; LINHA 0 / COLUNA 0
	BSF	RS			; SELECIONA O DISPLAY P/ DADOS
					; COMANDOS PARA ESCREVER AS
					; LETRAS DE "AQUEC. RPS TEMP."
	MOVLW	'A'
	CALL	ESCREVE
	MOVLW	'Q'
	CALL	ESCREVE
	MOVLW	'U'
	CALL	ESCREVE
	MOVLW	'E'
	CALL	ESCREVE
	MOVLW	'C'
	CALL	ESCREVE
	MOVLW	'.'
	CALL	ESCREVE
	MOVLW	' '
	CALL	ESCREVE
	MOVLW	'R'
	CALL	ESCREVE
	MOVLW	'P'
	CALL	ESCREVE
	MOVLW	'S'
	CALL	ESCREVE
	MOVLW	' '
	CALL	ESCREVE
	MOVLW	'T'
	CALL	ESCREVE
	MOVLW	'E'
	CALL	ESCREVE
	MOVLW	'M'
	CALL	ESCREVE
	MOVLW	'P'
	CALL	ESCREVE
	MOVLW	'.'
	CALL	ESCREVE

	BCF	RS			; SELECIONA O DISPLAY P/ COMANDOS
	MOVLW	0XC1			; COMANDO PARA POSICIONAR O CURSOR
	CALL	ESCREVE			; LINHA 1 / COLUNA 1
	BSF	RS			; SELECIONA O DISPLAY P/ DADOS
					; COMANDOS PARA ESCREVER AS
					; LETRAS DE "000%"
	MOVLW	'0'
	CALL	ESCREVE
	MOVLW	'0'
	CALL	ESCREVE
	MOVLW	'0'
	CALL	ESCREVE
	MOVLW	'%'
	CALL	ESCREVE


	BCF	RS			; SELECIONA O DISPLAY P/ COMANDOS
	MOVLW	0XC7			; COMANDO PARA POSICIONAR O CURSOR
	CALL	ESCREVE			; LINHA 1 / COLUNA 7
	BSF	RS			; SELECIONA O DISPLAY P/ DADOS
					; COMANDOS PARA ESCREVER AS
					; LETRAS DE "000"
	MOVLW	'0'
	CALL	ESCREVE
	MOVLW	'0'
	CALL	ESCREVE
	MOVLW	'0'
	CALL	ESCREVE

	BCF	RS			; SELECIONA O DISPLAY P/ COMANDOS
	MOVLW	0XCB			; COMANDO PARA POSICIONAR O CURSOR
	CALL	ESCREVE			; LINHA 1 / COLUNA 7
	BSF	RS			; SELECIONA O DISPLAY P/ DADOS
					; COMANDOS PARA ESCREVER AS
					; LETRAS DE "000�C"
	MOVLW	'0'
	CALL	ESCREVE
	MOVLW	'0'
	CALL	ESCREVE
	MOVLW	'0'
	CALL	ESCREVE
	MOVLW	0XDF
	CALL	ESCREVE
	MOVLW	'C'
	CALL	ESCREVE

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                               LOOP PRINCIPAL                            *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;  A ROTINA PRINCIPAL FICA AGUARDANDO O MOMENTO DE ESCREVER O VALOR DAS
;  ROTA��ES DO VENTILADOR E A TEMPERATURA NO LCD AL�M DE VARRER O TECLADO
;  PARA MANIPULAR O VALOR DO PWM.

	BSF	ADCON0,GO		; INICIA CONVERS�O A/D
					; EXECUTADA APENAS UMA VEZ

	BSF	INTCON,GIE		; HABILITA FLAG GLOBAL DAS
					; INTERRUP��ES

VARRE
	CLRWDT				; LIMPA WATCHDOG TIMER

	BTFSC	MOSTRA_RPS		; DEVE MOSTRAR RPS NO LCD ?
	CALL	MOSTRA_RPS_LCD		; SIM - CHAMA ROTINA P/ ATUALIZAR RPS
					; N�O
	BTFSC	MOSTRA_TEMP		; DEVE MOSTRAR A TEMP. NO LCD ?
	CALL	MOSTRA_TEMP_LCD		; SIM - CHAMA ROTINA P/ ATUALIZAR TEMP.
					; N�O
	BTFSS	BOTAO_0			; O BOT�O 0 EST� PRESSIONADO ?
	GOTO	TRATA_BOTAO_0		; SIM - PULA P/ TRATA_BOTAO_0
					; N�O
	BTFSS	BOTAO_1			; O BOT�O 1 EST� PRESSIONADO ?
	GOTO	TRATA_BOTAO_1		; SIM - PULA P/ TRATA_BOTAO_1
					; N�O
	BTFSS	BOTAO_2			; O BOT�O 2 EST� PRESSIONADO ?
	GOTO	TRATA_BOTAO_2		; SIM - PULA P/ TRATA_BOTAO_2
					; N�O
	BTFSS	BOTAO_3			; O BOT�O 3 EST� PRESSIONADO ?
	GOTO	TRATA_BOTAO_3		; SIM - PULA P/ TRATA_BOTAO_3
					; N�O

	MOVLW	FILTRO_TECLA		; CARREGA NO WORK O VALOR DE FILTRO_TECLA
	MOVWF	FILTRO_BOTOES		; SALVA EM FILTRO_BOTOES
					; RECARREGA FILTRO P/ EVITAR RUIDOS
	MOVLW	.1
	MOVWF	TEMPO_TURBO		; CARREGA TEMPO DO TURBO DAS TECLAS
					; COM 1 - IGNORA O TURBO A PRIMEIRA
					; VEZ QUE A TECLA � PRESSIONADA

	GOTO	VARRE			; VOLTA PARA VARRER TECLADO

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                         TRATAMENTO DOS BOT�ES                           *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

; ************************* TRATAMENTO DO BOT�O 0 ***************************

TRATA_BOTAO_0
	DECFSZ	FILTRO_BOTOES,F		; FIM DO FILTRO ? (RUIDO?)
	GOTO	VARRE			; N�O - VOLTA P/ VARRE
					; SIM - BOT�O PRESSIONADO

	DECFSZ	TEMPO_TURBO,F		; FIM DO TEMPO DE TURBO ?
	GOTO	VARRE			; N�O - VOLTA P/ VARRE
					; SIM
	MOVLW	TURBO_TECLA
	MOVWF	TEMPO_TURBO		; RECARREGA TEMPORIZADOR DO TURBO
					; DAS TECLAS

	MOVLW	.100
	XORWF	INTENSIDADE_AQUE,W
	BTFSS	STATUS,Z		; PODE INCREMENTAR PWM DO AQUECEDOR ?
	INCF	INTENSIDADE_AQUE,F	; SIM - INCREMENTA INTENSIDADE_AQUE
					; N�O

	MOVF	INTENSIDADE_AQUE,W	; CARREGA INTENSIDADE_AQUE NO WORK
	MOVWF	mulplr			; CARREGA WORK EM mulplr

	MOVLW	.10
	MOVWF	mulcnd			; CARREGA 10d EM mulcnd

	CALL	mpy_F			; CHAMA ROTINA DE MULTIPLICA��O

	SWAPF	L_byte,W
	ANDLW	B'00110000'
	IORLW	B'00001111'
	RRF	H_byte,F
	RRF	L_byte,F
	RRF	H_byte,F
	MOVWF	CCP1CON
	RRF	L_byte,W
	MOVWF	CCPR1L			; ATUALIZA REGISTRADORES DO DUTY CYCLE
					; DO M�DULO CCP1 - PWM DO AQUECEDOR

	MOVF	INTENSIDADE_AQUE,W	; FAZ O AJUSTE DECIMAL DA INTENSIDADE
	CALL	AJUSTE_DECIMAL		; DO PWM DO AQUECEDOR

	BCF	RS			; SELECIONA O DISPLAY P/ COMANDOS
	MOVLW	0XC1			; COMANDO PARA POSICIONAR O CURSOR
	CALL	ESCREVE			; LINHA 1 / COLUNA 1
	BSF	RS			; SELECIONA O DISPLAY P/ DADOS

	MOVF	CENTENA,W
	ADDLW	0X30			; FAZ AJUSTE ASCII DA CENTENA
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	MOVF	DEZENA,W
	ADDLW	0X30			; FAZ AJUSTE ASCII DA DEZENA
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	MOVF	UNIDADE,W
	ADDLW	0X30			; FAZ AJUSTE ASCII DA UNIDADE
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	GOTO	VARRE			; VOLTA P/ VARREDURA DOS BOT�ES

; ************************* TRATAMENTO DO BOT�O 1 ***************************

TRATA_BOTAO_1
	DECFSZ	FILTRO_BOTOES,F		; FIM DO FILTRO ? (RUIDO?)
	GOTO	VARRE			; N�O - VOLTA P/ VARRE
					; SIM - BOT�O PRESSIONADO

	DECFSZ	TEMPO_TURBO,F		; FIM DO TEMPO DE TURBO ?
	GOTO	VARRE			; N�O - VOLTA P/ VARRE
					; SIM
	MOVLW	TURBO_TECLA
	MOVWF	TEMPO_TURBO		; RECARREGA TEMPORIZADOR DO TURBO
					; DAS TECLAS

	MOVF	INTENSIDADE_AQUE,F
	BTFSS	STATUS,Z		; PODE DECREMENTAR PWM DO AQUECEDOR ?
	DECF	INTENSIDADE_AQUE,F	; SIM - DECREMENTA INTENSIDADE_AQUE
					; N�O

	MOVF	INTENSIDADE_AQUE,W	; CARREGA INTENSIDADE_AQUE NO WORK
	MOVWF	mulplr			; CARREGA WORK EM mulplr

	MOVLW	.10
	MOVWF	mulcnd			; CARREGA 10d EM mulcnd

	CALL	mpy_F			; CHAMA ROTINA DE MULTIPLICA��O

	SWAPF	L_byte,W
	ANDLW	B'00110000'
	IORLW	B'00001111'
	RRF	H_byte,F
	RRF	L_byte,F
	RRF	H_byte,F
	MOVWF	CCP1CON
	RRF	L_byte,W
	MOVWF	CCPR1L			; ATUALIZA REGISTRADORES DO DUTY CYCLE
					; DO M�DULO CCP1 - PWM DO AQUECEDOR

	MOVF	INTENSIDADE_AQUE,W	; FAZ O AJUSTE DECIMAL DA INTENSIDADE
	CALL	AJUSTE_DECIMAL		; DO PWM DO AQUECEDOR

	BCF	RS			; SELECIONA O DISPLAY P/ COMANDOS
	MOVLW	0XC1			; COMANDO PARA POSICIONAR O CURSOR
	CALL	ESCREVE			; LINHA 1 / COLUNA 1
	BSF	RS			; SELECIONA O DISPLAY P/ DADOS

	MOVF	CENTENA,W
	ADDLW	0X30			; FAZ AJUSTE ASCII DA CENTENA
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	MOVF	DEZENA,W
	ADDLW	0X30			; FAZ AJUSTE ASCII DA DEZENA
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	MOVF	UNIDADE,W
	ADDLW	0X30			; FAZ AJUSTE ASCII DA UNIDADE
	CALL	ESCREVE			; ESCREVE VALOR NO LCD

	GOTO	VARRE			; VOLTA P/ VARREDURA DOS BOT�ES

; ************************* TRATAMENTO DO BOT�O 2 ***************************

TRATA_BOTAO_2
	DECFSZ	FILTRO_BOTOES,F		; FIM DO FILTRO ? (RUIDO?)
	GOTO	VARRE			; N�O - VOLTA P/ VARRE
					; SIM - BOT�O PRESSIONADO

	DECFSZ	TEMPO_TURBO,F		; FIM DO TEMPO DE TURBO ?
	GOTO	VARRE			; N�O - VOLTA P/ VARRE
					; SIM
	MOVLW	TURBO_TECLA
	MOVWF	TEMPO_TURBO		; RECARREGA TEMPORIZADOR DO TURBO
					; DAS TECLAS
	MOVLW	.100
	XORWF	INTENSIDADE_VENT,W
	BTFSS	STATUS,Z		; PODE INCREMENTAR PWM DO VENTILADOR ?
	INCF	INTENSIDADE_VENT,F	; SIM - INCREMENTA INTENSIDADE_VENT
					; N�O

	MOVF	INTENSIDADE_VENT,W	; CARREGA INTENSIDADE_VENT NO WORK
	MOVWF	mulplr			; CARREGA WORK EM mulplr

	MOVLW	.10
	MOVWF	mulcnd			; CARREGA 10d EM mulcnd

	CALL	mpy_F			; CHAMA ROTINA DE MULTIPLICA��O

	SWAPF	L_byte,W
	ANDLW	B'00110000'
	IORLW	B'00001111'
	RRF	H_byte,F
	RRF	L_byte,F
	RRF	H_byte,F
	MOVWF	CCP2CON
	RRF	L_byte,W
	MOVWF	CCPR2L			; ATUALIZA REGISTRADORES DO DUTY CYCLE
					; DO M�DULO CCP2 - PWM DO VENTILADOR

	GOTO	VARRE			; VOLTA P/ VARREDURA DOS BOT�ES

; ************************* TRATAMENTO DO BOT�O 3 ***************************

TRATA_BOTAO_3
	DECFSZ	FILTRO_BOTOES,F		; FIM DO FILTRO ? (RUIDO?)
	GOTO	VARRE			; N�O - VOLTA P/ VARRE
					; SIM - BOT�O PRESSIONADO

	DECFSZ	TEMPO_TURBO,F		; FIM DO TEMPO DE TURBO ?
	GOTO	VARRE			; N�O - VOLTA P/ VARRE
					; SIM
	MOVLW	TURBO_TECLA
	MOVWF	TEMPO_TURBO		; RECARREGA TEMPORIZADOR DO TURBO
					; DAS TECLAS

	MOVF	INTENSIDADE_VENT,F
	BTFSS	STATUS,Z		; PODE DECREMENTAR PWM DO VENTILADOR ?
	DECF	INTENSIDADE_VENT,F	; SIM - DECREMENTA INTENSIDADE_VENT
					; N�O

	MOVF	INTENSIDADE_VENT,W	; CARREGA INTENSIDADE_VENT NO WORK
	MOVWF	mulplr			; CARREGA WORK EM mulplr

	MOVLW	.10
	MOVWF	mulcnd			; CARREGA 50d EM mulcnd

	CALL	mpy_F			; CHAMA ROTINA DE MULTIPLICA��O

	SWAPF	L_byte,W
	ANDLW	B'00110000'
	IORLW	B'00001111'
	RRF	H_byte,F
	RRF	L_byte,F
	RRF	H_byte,F
	MOVWF	CCP2CON
	RRF	L_byte,W
	MOVWF	CCPR2L			; ATUALIZA REGISTRADORES DO DUTY CYCLE
					; DO M�DULO CCP2 - PWM DO VENTILADOR

	GOTO	VARRE			; VOLTA P/ VARREDURA DOS BOTOES

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                TABELAS DE CONVERSAO P/ TEMPERATURA DO DIODO             *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0X200			; POSICIONA O INICIO DA TABELA EM 0X400
	RADIX	DEC			; CONFIGURA RADIX EM DECIMAL

TABELA_TEMPERATURA
	MOVLW	HIGH TABELA_TEMP
	MOVWF	PCLATH			; ACERTA VALOR DO PCLATH
	MOVLW	LOW TABELA_TEMP		; CARREGA NO WORK PARTE BAIXA DO PC
	ADDWF	TEMPERATURA,W		; SOMA AO DESLOCAMENTO (TEMPERATURA)
	BTFSC	STATUS,C		; HOUVE ESTOURO ?
	INCF	PCLATH,F		; SIM - INCREMENTA PCLATH (PARTE ALTA DO PC)
	MOVWF	PCL			; MOVE WORK P/ PCL
					; PROVOCA UM SALTO

TABELA_TEMP
        DT      000,000,000,000,000,000,000,000,000,000,000,000,000,000,010,000 ;15
        DT      000,000,000,000,000,000,000,000,000,000,000,000,000,000,001,001 ;31
        DT      002,002,003,003,004,004,005,005,006,006,007,007,008,008,009,009 ;47
        DT      010,010,011,011,012,012,013,013,014,014,015,015,016,016,017,017 ;63

        DT      018,018,019,019,020,020,021,021,022,022,023,023,023,024,024,025 ;79
        DT      025,026,026,027,027,028,028,029,029,030,030,031,031,032,032,033 ;95
        DT      033,034,034,035,035,036,036,037,037,038,038,039,039,040,040,041 ;111
        DT      041,042,042,043,043,044,044,045,045,046,046,047,047,048,048,049 ;127
        
        DT      049,050,050,051,051,052,052,053,053,054,054,055,055,056,056,057 ;143
        DT      057,058,058,059,059,060,060,061,061,062,062,063,063,064,064,065 ;159
        DT      065,066,066,067,067,068,068,069,069,070,070,071,071,072,072,073 ;175
        DT      073,074,074,075,075,076,076,077,077,078,078,079,079,080,080,081 ;191

        DT      081,082,082,083,083,084,084,085,085,086,086,087,087,088,088,089 ;207
        DT      089,090,090,091,091,092,092,093,093,094,094,095,095,096,096,097 ;223
        DT      097,098,098,099,099,100,100,101,101,102,102,103,103,104,104,104 ;239
        DT      105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112 ;255

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; *                              FIM DO PROGRAMA                            *
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END				; FIM DO PROGRAMA

